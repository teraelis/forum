<?php
namespace TerAelis\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
* UserRepository
*
* This class was generated by the Doctrine ORM. Add your own custom
* repository methods below.
*/
class GroupRepository extends EntityRepository
{
    public function findAllBut($listId, $invisible = 0) {
        $where = "";
        foreach($listId as $id) {
            $where = $where.' and g.id != '.$id;
        }
        $where = substr($where, 4);

        $query = $this->createQueryBuilder('g')
            ->where($where);
        if(!$invisible) {
            $query = $query->andWhere('g.invisible = '.$invisible);
        }
        return $query->orderBy('g.ordre', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function findUsr($id) {
        return $this->createQueryBuilder('g')
            ->distinct()
            ->join('g.userRoles', 'ur')
            ->join('ur.user', 'u')
            ->where('u.id = '.$id)
            ->orderBy('g.ordre', 'ASC')
            ->addSelect('ur.role as userRole')
            ->getQuery()
            ->getResult();
    }

    public function findLast() {
        $qb = $this->createQueryBuilder('g');
        $qb->orderBy('g.id', 'DESC')
            ->setMaxResults(1);
        return $qb->getQuery()
            ->getSingleResult();
    }

    public function getVisible() {
        return $this->createQueryBuilder('g')
            ->where('g.invisible = 0')
            ->orderBy('g.ordre', 'ASC')
            ->getQuery()
            ->getResult();
    }
}
